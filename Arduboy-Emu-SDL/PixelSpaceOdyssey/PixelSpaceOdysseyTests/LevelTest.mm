//
//  LevelTest.m
//  PixelSpaceOdyssey
//
//  Created by Alex Lementuev on 12/2/15.
//  Copyright Â© 2015 Space Madness. All rights reserved.
//

#import <XCTest/XCTest.h>

#include "Level.h"

@interface LevelTest : XCTestCase

@end

@implementation LevelTest

- (void)testLevelIO
{
    uint8_t indices[] = {
        16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
        16,16,2,8,9,12,13,8,9,10,4,5,6,0,8,9,5,6,3,12,13,3,2,8,3,2,3,16,16,16,16,16,16,16,
        16,2,0,0,0,0,0,0,0,11,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,16,16,16,16,16,16,
        18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,11,2,3,16,16,16,
        16,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,15,19,16,14,0,0,0,0,0,0,0,0,0,3,16,16,
        18,0,0,0,0,0,0,0,0,15,16,14,0,0,0,0,15,16,12,13,3,2,0,0,0,0,0,0,0,0,0,0,17,16,
        16,14,0,1,0,0,0,0,0,8,3,2,0,0,0,0,17,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,20,16,
        16,16,19,16,19,0,0,0,0,1,0,0,0,0,0,15,2,0,0,0,0,0,0,0,0,0,0,0,0,15,16,19,16,16,
        16,16,16,16,16,14,1,0,15,16,19,14,0,0,14,1,0,0,0,0,0,0,0,0,0,0,0,0,15,16,16,16,16,16,
        16,16,16,16,16,16,16,19,12,13,3,2,0,0,3,16,2,0,0,0,0,0,0,0,0,0,0,0,0,8,9,10,16,16,
        16,16,16,16,16,16,16,2,0,0,0,0,0,0,15,16,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,16,16,
        16,16,16,16,16,16,2,0,0,0,0,0,0,17,16,16,16,16,14,0,0,0,0,0,0,0,0,0,0,0,0,0,17,16,
        16,16,16,16,16,16,0,0,0,0,0,0,0,3,16,16,16,16,16,14,0,0,0,0,0,0,0,0,0,0,0,0,3,16,
        16,16,16,16,16,21,1,0,0,0,1,0,1,15,16,16,16,16,16,16,22,23,0,0,1,0,1,0,0,0,0,0,15,16,
        16,16,16,16,16,16,16,16,16,19,16,19,16,16,16,16,16,16,16,16,16,16,16,19,16,19,16,16,14,0,0,15,16,16,
        16,16,16,16,16,16,16,16,4,5,6,3,12,13,3,2,8,9,10,16,16,16,16,16,16,16,16,16,16,14,0,3,16,16,
        16,16,16,4,5,6,3,17,7,0,0,0,0,0,0,0,0,0,11,16,12,13,8,9,10,16,16,16,16,16,14,0,3,16,
        16,16,18,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,16,4,5,6,3,2,0,0,17,
        16,16,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,7,0,0,0,0,0,15,16,
        16,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,16,
        21,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,16,
        16,16,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,16,16,
        16,16,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,16,
        16,21,1,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,20,
        16,16,16,16,16,16,16,19,16,19,16,16,16,19,16,16,16,16,16,19,16,16,16,19,16,16,16,16,16,16,16,16,16,16,
    };
    
    uint8_t width = 34;
    uint8_t height = 25;
    
    Level* expected = new Level(indices, width, height);
    expected->writeToFile("test.pso");
    
    Level* actual = Level::readFromFile("test.pso");
    [self assertLevel:expected equalsToLevel:actual];
    expected->release();
    actual->release();
}

- (void)testLoadMissingLevel
{
    Level* level = Level::readFromFile("foo");
    XCTAssertTrue(level == NULL);
}

- (void)assertLevel:(const Level*)expected equalsToLevel:(const Level*)actual
{
    XCTAssertEqual(expected->tileSetId(), actual->tileSetId());
    XCTAssertEqual(expected->rows(), actual->rows());
    XCTAssertEqual(expected->cols(), actual->cols());
    int indexCount = expected->rows() * expected->cols();
    for (int i = 0; i < indexCount; ++i)
    {
        XCTAssertEqual(expected->indices()[i], actual->indices()[i]);
    }
    
    XCTAssertEqual(expected->playerX(), actual->playerX());
    XCTAssertEqual(expected->playerY(), actual->playerY());
}

@end
