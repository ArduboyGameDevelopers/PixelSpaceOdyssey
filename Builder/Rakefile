require 'rake'
require 'plist'

require_relative 'common'
require_relative 'animation_builder'

include Common

task :init do

  $project_name     = 'PixelSpaceOdyssey'
  $project_config   = 'Debug'

  $dir_builder      = File.expand_path '.'
  $dir_repo         = File.expand_path '..'
  $dir_project      = resolve_path "#{$dir_repo}/#{$project_name}"

  $dir_out          = "#{$dir_builder}/out"

  $dir_emu          = resolve_path "#{$dir_repo}/Arduboy-Emu"
  $file_emu_project = resolve_path "#{$dir_emu}/#{$project_name}.xcodeproj"

  $dir_art          = resolve_path "#{$dir_repo}/Art"
  $dir_animations   = resolve_path "#{$dir_art}/animations"

  def extract_project_version(dir_project)
    file_plist = resolve_path "#{dir_project}/Arduboy-Emu/Info.plist"
    plist = Plist::parse_xml file_plist

    not_nil plist['CFBundleShortVersionString']
  end

  $project_version = extract_project_version $dir_emu
end

task :clean => :init do
  FileUtils.rm_rf $dir_out
  FileUtils.mkpath $dir_out
end

desc 'Generate animations'
task :generate_animations => :init do

  Dir["#{$dir_animations}/*.psd"].each { |psd_file|
    AnimationBuilder.generate psd_file, $dir_project
  }

end

desc 'Build the app'
task :build => :clean do
  puts "Project version: #{$project_version}"

  cmd = 'xcodebuild'
  cmd << %( -project "#{$file_emu_project}")
  cmd << ' -configuration Debug'
  cmd << %( -target "#{$project_name}")
  exec_shell cmd, 'Unable to build the project'

  dir_project = File.dirname $file_emu_project
  dir_build = File.resolve_path "#{dir_project}/build/#{$project_config}"

  file_output = "#{$dir_out}/#{$project_name}-#{$project_version}.zip"
  zip_dir dir_build, file_output

end

desc 'Deploys the app'
task :deploy => :build do

  file_build = resolve_path "#{$dir_out}/#{$project_name}-#{$project_version}.zip"
  FileUtils.cp file_build, File.expand_path('~/Dropbox/PSO')

end
